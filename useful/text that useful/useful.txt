
pa11: Bag.o Set.o pa11.o
        $(CXX) $(CXXFLAGS) Bag.o Set.o -o pa11

Bag.o: Bag.cpp Bag.h
        $(CXX) $(CXXFLAGS) Bag.cpp -c

Set.o: Set.cpp Set.h Bag.h
        $(CXX) $(CXXFLAGS) Set.cpp -c

pa11.o: pa11.cpp Bag.h Set.h
        $(CXX) $(CXXFLAGS) pa11.cpp -c

/// Performs stream output on Containers, using "{1,2,3}" format.
void write(std::ostream& output, const Container& container) {

}


pa12: Container.o pa12.o
        $(CXX) $(CXXFLAGS) Container.o pa12.o -o pa12

pa12.o: pa12.cpp Container.h
        $(CXX) $(CXXFLAGS) pa12.cpp -c

Container.o: Container.cpp Container.h
        $(CXX) $(CXXFLAGS) Container.cpp -c

clean:
        rm -f pa12 pa12.o Container.o

turnin:
        turnin -c cs202 -p pa12 -v Container.h Container.cpp pa12.cpp Makefile




pa14-test: pa14-test.o
	$(CXX) $(CXXFLAGS) pa14-test.o -o pa14-test

pa14-test.o: pa14-test.cpp Container.hpp
	$(CXX) $(CXXFLAGS) pa14-test.cpp -c

pa14: pa14.o
	$(CXX) $(CXXFLAGS) pa14.o -o pa14

pa14.o: pa14.cpp Container.hpp ansi.hpp
	$(CXX) $(CXXFLAGS) pa14.cpp -c

clean:
	rm -f pa14 pa14.o
	rm -f pa14-test pa14test.o

turnin:	
	turnin -c cs202 -p pa14 -v Container.hpp ansi.hpp pa14-test.cpp pa14.cpp Makefile




pa17a-test: pa17a-test.o
	$(CXX) $(CXXFLAGS) pa17a-test.o -o pa17a-test

pa17-test.o: simple_list_test.cpp simple_list.cpp
	$(CXX) $(CXXFLAGS) pa17a-test.cpp -c

pa17a: pa17a.o
	$(CXX) $(CXXFLAGS) pa17a.o -o pa17a

pa17a.o: pa17a.cpp simple_list.cpp
	$(CXX) $(CXXFLAGS) pa17a.cpp -c

clean: 
	rm -f pa17a pa17.o
	rm -f pa17a-test pa17a-test.o

turnin: 
	turnin —c cs202 —p pa17a —v \
	simple_list.h simple_list.cpp pa17a.cpp Makefile



